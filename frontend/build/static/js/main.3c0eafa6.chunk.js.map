{"version":3,"sources":["services/api.js","components/MoodForm.js","components/MoodChart.js","components/UpliftingMessages.js","pages/Login.js","pages/Register.js","App.js","index.js"],"names":["API_BASE_URL","concat","process","MoodForm","mood","setMood","useState","feelings","setFeelings","message","setMessage","navigate","useNavigate","_jsxs","motion","div","className","initial","opacity","y","animate","transition","duration","children","_jsx","onSubmit","async","e","preventDefault","userId","localStorage","getItem","Error","payload","_objectSpread","moodData","user_id","parseInt","axios","post","data","error","_error$response","console","response","saveMood","notes","setTimeout","Smile","type","value","onChange","target","placeholder","required","Heart","button","whileHover","scale","whileTap","Send","style","marginTop","backgroundColor","onClick","BarChart","includes","ChartJS","register","LineElement","PointElement","LinearScale","Title","CategoryScale","Tooltip","Legend","MoodChart","setMoodData","loading","setLoading","useEffect","get","params","_error$response2","getWeeklyMood","fetchMoodData","chartData","labels","map","entry","Date","date","toLocaleDateString","undefined","weekday","month","day","datasets","label","sentiment","fill","borderColor","tension","pointRadius","pointHoverRadius","maxWidth","margin","padding","textAlign","color","length","Line","options","responsive","plugins","legend","display","tooltip","callbacks","context","raw","title","text","font","size","scales","x","ticks","grid","beginAtZero","UpliftingMessages","messages","setMessages","listStyleType","paddingLeft","index","marginBottom","fontSize","Login","email","setEmail","password","setPassword","setError","role","fetch","method","headers","body","JSON","stringify","json","ok","setItem","username","alert","err","noValidate","htmlFor","id","autoComplete","disabled","href","Register","setUsername","LogoutButton","handleLogout","removeItem","PrivateRoute","_ref","Navigate","to","App","isLoggedIn","currentPath","window","location","pathname","Router","toDateString","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.3c0eafa6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = `${process.env.REACT_APP_API_URL}/api`;\r\n\r\n\r\n// ✅ Save Mood Entry\r\nexport const saveMood = async (moodData) => {\r\n  try {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!userId) throw new Error('User not logged in.');\r\n\r\n    // Send mood data along with user_id (as required by backend)\r\n    const payload = {\r\n      ...moodData,\r\n      user_id: parseInt(userId), // ensure it's a number\r\n    };\r\n\r\n    const response = await axios.post(`${API_BASE_URL}/moods`, payload);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('❌ Error saving mood:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Fetch Weekly Mood Data\r\nexport const getWeeklyMood = async () => {\r\n  try {\r\n    const userId = localStorage.getItem('userId');\r\n    if (!userId) throw new Error('User not logged in.');\r\n\r\n    const response = await axios.get(`${API_BASE_URL}/moods/weekly`, {\r\n      params: { user_id: parseInt(userId) }, // match backend param\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('❌ Error fetching weekly mood:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { saveMood } from '../services/api';\r\nimport { motion } from 'framer-motion';\r\nimport { Smile, Heart, Send, BarChart } from 'lucide-react';\r\n\r\nconst MoodForm = () => {\r\n  const [mood, setMood] = useState('');\r\n  const [feelings, setFeelings] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n\r\n    const userId = localStorage.getItem('userId');\r\n    if (!userId) {\r\n      setMessage('❌ You must be logged in to submit mood.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await saveMood({ userId, mood, notes: feelings });\r\n      setMessage('✅ Mood saved successfully!');\r\n      setMood('');\r\n      setFeelings('');\r\n    } catch (error) {\r\n      console.error('Error saving mood:', error);\r\n      setMessage('❌ Error saving mood. Please try again.');\r\n    } finally {\r\n      setTimeout(() => setMessage(''), 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"glass-form\"\r\n      initial={{ opacity: 0, y: 30 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6 }}\r\n    >\r\n      <h1 className=\"title\">🧠 FitMind</h1>\r\n      <p className=\"subtitle\">Track your mental fitness daily.</p>\r\n\r\n      <form onSubmit={handleSubmit} className=\"form\">\r\n        <label className=\"label\">\r\n          <Smile className=\"icon\" /> Mood\r\n          <input\r\n            type=\"text\"\r\n            value={mood}\r\n            onChange={(e) => setMood(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Happy, Anxious, Calm...\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className=\"label\">\r\n          <Heart className=\"icon\" /> What’s going on?\r\n          <textarea\r\n            value={feelings}\r\n            onChange={(e) => setFeelings(e.target.value)}\r\n            className=\"textarea\"\r\n            placeholder=\"Share your thoughts here...\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <motion.button\r\n          type=\"submit\"\r\n          whileHover={{ scale: 1.05 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          className=\"submit\"\r\n        >\r\n          <Send className=\"icon\" /> Save Mood\r\n        </motion.button>\r\n      </form>\r\n\r\n      <motion.button\r\n        className=\"submit\"\r\n        style={{ marginTop: '15px', backgroundColor: '#0097a7' }}\r\n        whileHover={{ scale: 1.05 }}\r\n        whileTap={{ scale: 0.95 }}\r\n        onClick={() => navigate('/mood-chart')}\r\n      >\r\n        <BarChart className=\"icon\" /> View Mood Chart\r\n      </motion.button>\r\n\r\n      {message && (\r\n        <motion.div\r\n          className={`feedback ${message.includes('Error') || message.includes('❌') ? 'error' : 'success'}`}\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n        >\r\n          {message}\r\n        </motion.div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default MoodForm;\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  Title,\r\n  CategoryScale,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { getWeeklyMood } from '../services/api'; // Make sure this API function passes userId\r\n\r\nChartJS.register(\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  Title,\r\n  CategoryScale,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst MoodChart = () => {\r\n  const [moodData, setMoodData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMoodData = async () => {\r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        if (!userId) {\r\n          throw new Error('User not logged in');\r\n        }\r\n\r\n        const data = await getWeeklyMood(userId); // ✅ Send userId to backend\r\n        setMoodData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching mood data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMoodData();\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: moodData.map(entry =>\r\n      new Date(entry.date).toLocaleDateString(undefined, {\r\n        weekday: 'short',\r\n        month: 'short',\r\n        day: 'numeric',\r\n      })\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: 'Mood Sentiment',\r\n        data: moodData.map(entry => entry.sentiment),\r\n        fill: false,\r\n        backgroundColor: '#00e5ff',\r\n        borderColor: '#00e5ff',\r\n        tension: 0.3,\r\n        pointRadius: 5,\r\n        pointHoverRadius: 7,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        labels: {\r\n          color: '#ffffff',\r\n        },\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) => `Sentiment: ${context.raw}`,\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Your Weekly Mood Trend',\r\n        color: '#ffffff',\r\n        font: {\r\n          size: 20,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: { color: '#ffffff' },\r\n        grid: { color: 'rgba(255,255,255,0.1)' },\r\n      },\r\n      y: {\r\n        ticks: { color: '#ffffff' },\r\n        grid: { color: 'rgba(255,255,255,0.1)' },\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '800px', margin: '0 auto', padding: '40px' }}>\r\n      <h2 style={{ textAlign: 'center', color: '#ffffff' }}>📈 Mood Chart</h2>\r\n      {loading ? (\r\n        <p style={{ textAlign: 'center', color: '#ccc' }}>Loading...</p>\r\n      ) : moodData.length === 0 ? (\r\n        <p style={{ textAlign: 'center', color: '#ff8a80' }}>No mood entries found.</p>\r\n      ) : (\r\n        <Line data={chartData} options={chartOptions} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoodChart;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst UpliftingMessages = () => {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // You can later fetch from an API here if desired\r\n        const fetchMessages = () => {\r\n            const exampleMessages = [\r\n                \"Believe in yourself and all that you are.\",\r\n                \"You are stronger than you think.\",\r\n                \"Every day may not be good, but there is something good in every day.\",\r\n                \"Keep your face always toward the sunshine—and shadows will fall behind you.\",\r\n                \"The only way to do great work is to love what you do.\"\r\n            ];\r\n            setMessages(exampleMessages);\r\n        };\r\n\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ maxWidth: '600px', margin: '0 auto', padding: '20px' }}>\r\n            <h2>🌟 Uplifting Messages</h2>\r\n            <ul style={{ listStyleType: 'disc', paddingLeft: '20px' }}>\r\n                {messages.map((message, index) => (\r\n                    <li key={index} style={{ marginBottom: '10px', fontSize: '1.1em' }}>\r\n                        {message}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpliftingMessages","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    if (!email || !password) {\r\n      setError(\"Please fill in both fields.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Login failed\");\r\n      }\r\n\r\n      // ✅ Save userId and username to localStorage\r\n      localStorage.setItem(\"userId\", data.userId);\r\n      localStorage.setItem(\"username\", data.username);\r\n\r\n      alert(\"✅ Login successful!\");\r\n      navigate(\"/\"); // Redirect to main/dashboard page\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"title-banner\"></div>\r\n\r\n      <div className=\"login-card\">\r\n        <div className=\"avatar-wrapper\">\r\n          <span className=\"emoji\" role=\"img\" aria-label=\"mind\">\r\n            🧠\r\n          </span>\r\n        </div>\r\n\r\n        <form className=\"login-form\" onSubmit={handleSubmit} noValidate>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"email@domain.com\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            autoComplete=\"username\"\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          {error && <p className=\"error-msg\">{error}</p>}\r\n\r\n          <button type=\"submit\" disabled={loading}>\r\n            {loading ? \"Logging in...\" : \"Log in\"}\r\n          </button>\r\n        </form>\r\n\r\n        {/* ✅ Sign up link */}\r\n        <p className=\"auth-link-prompt\">\r\n          Don’t have an account? <a href=\"/Register\">Sign up</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n ","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    if (!email || !username || !password) {\r\n      setError(\"All fields are required.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Registration failed\");\r\n      }\r\n\r\n      alert(\"✅ Registered successfully! You can now log in.\");\r\n      navigate(\"/Login\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"title-banner\">Register - FitMind</div>\r\n\r\n      <div className=\"login-card\">\r\n        <div className=\"avatar-wrapper\">\r\n          <span className=\"emoji\" role=\"img\" aria-label=\"brain\">\r\n            🧠\r\n          </span>\r\n        </div>\r\n\r\n        <form className=\"login-form\" onSubmit={handleRegister} noValidate>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            placeholder=\"Your name\"\r\n            autoComplete=\"name\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"email@domain.com\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            autoComplete=\"new-password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n\r\n          {error && <p className=\"error-msg\">{error}</p>}\r\n\r\n          <button type=\"submit\" disabled={loading}>\r\n            {loading ? \"Registering...\" : \"Register\"}\r\n          </button>\r\n        </form>\r\n\r\n        {/* Link to login page */}\r\n        <p className=\"auth-link-prompt\">\r\n          Already have an account? <a href=\"/Login\">Log in</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport MoodForm from \"./components/MoodForm\";\r\nimport MoodChart from \"./components/MoodChart\";\r\nimport UpliftingMessages from \"./components/UpliftingMessages\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport \"./style.css\";\r\n\r\n// 🔐 Logout Button (shown only on protected pages)\r\nconst LogoutButton = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"username\"); // ✅ clear username too\r\n    alert(\"Logged out successfully.\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <button className=\"logout-button\" onClick={handleLogout}>\r\n      Logout\r\n    </button>\r\n  );\r\n};\r\n\r\n// 🔐 PrivateRoute wrapper to protect authenticated pages\r\nconst PrivateRoute = ({ children }) => {\r\n  const isLoggedIn = !!localStorage.getItem(\"userId\");\r\n  return isLoggedIn ? (\r\n    <div className=\"protected-wrapper\">\r\n      <LogoutButton />\r\n      {children}\r\n    </div>\r\n  ) : (\r\n    <Navigate to=\"/login\" />\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const isLoggedIn = !!localStorage.getItem(\"userId\");\r\n  const username = localStorage.getItem(\"username\");\r\n  const currentPath = window.location.pathname;\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {/* ✅ Show Hello with username on main page */}\r\n        {isLoggedIn && currentPath === \"/\" && username && (\r\n          <div className=\"hello-banner\">\r\n  Hello, {localStorage.getItem(\"username\") || \"😊\"}\r\n</div>\r\n        )}\r\n\r\n        <div className=\"date-display\">{new Date().toDateString()}</div>\r\n        <h1 className=\"main-heading\">FitMind: Mental Fitness Journal</h1>\r\n\r\n        <Routes>\r\n          {/* Public Routes */}\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n\r\n          {/* Protected Routes */}\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <PrivateRoute>\r\n                <MoodForm />\r\n              </PrivateRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/mood-chart\"\r\n            element={\r\n              <PrivateRoute>\r\n                <MoodChart />\r\n              </PrivateRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/uplifting-messages\"\r\n            element={\r\n              <PrivateRoute>\r\n                <UpliftingMessages />\r\n              </PrivateRoute>\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './style.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}