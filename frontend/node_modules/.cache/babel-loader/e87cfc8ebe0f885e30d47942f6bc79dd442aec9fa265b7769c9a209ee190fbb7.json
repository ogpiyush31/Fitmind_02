{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIYUSH PATEL\\\\OneDrive\\\\Desktop\\\\FitMind\\\\fitmind\\\\frontend\\\\src\\\\components\\\\MoodChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend } from 'chart.js';\nimport { getWeeklyMood } from '../services/api'; // ✅ Corrected path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend);\nconst MoodChart = () => {\n  _s();\n  const [moodData, setMoodData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMoodData = async () => {\n      try {\n        const data = await getWeeklyMood();\n        setMoodData(data);\n      } catch (error) {\n        console.error('Error fetching mood data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMoodData();\n  }, []);\n  const data = {\n    labels: moodData.map(entry => new Date(entry.date).toLocaleDateString()),\n    datasets: [{\n      label: 'Mood Score',\n      data: moodData.map(entry => entry.sentiment),\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      tension: 0.4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Mood Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(MoodChart, \"H/plVR9b2ZYnxPug6/1RCcSghcA=\");\n_c = MoodChart;\nexport default MoodChart;\nvar _c;\n$RefreshReg$(_c, \"MoodChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","CategoryScale","Tooltip","Legend","getWeeklyMood","jsxDEV","_jsxDEV","register","MoodChart","_s","moodData","setMoodData","loading","setLoading","fetchMoodData","data","error","console","labels","map","entry","Date","date","toLocaleDateString","datasets","label","sentiment","fill","backgroundColor","borderColor","tension","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PIYUSH PATEL/OneDrive/Desktop/FitMind/fitmind/frontend/src/components/MoodChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { getWeeklyMood } from '../services/api'; // ✅ Corrected path\n\nChartJS.register(\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  Tooltip,\n  Legend\n);\n\nconst MoodChart = () => {\n    const [moodData, setMoodData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchMoodData = async () => {\n            try {\n                const data = await getWeeklyMood();\n                setMoodData(data);\n            } catch (error) {\n                console.error('Error fetching mood data:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchMoodData();\n    }, []);\n\n    const data = {\n        labels: moodData.map(entry => new Date(entry.date).toLocaleDateString()),\n        datasets: [\n            {\n                label: 'Mood Score',\n                data: moodData.map(entry => entry.sentiment),\n\n                fill: false,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n                tension: 0.4\n            },\n        ],\n    };\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '0 auto', padding: '20px' }}>\n            <h2>Weekly Mood Chart</h2>\n            {loading ? <p>Loading...</p> : <Line data={data} />}\n        </div>\n    );\n};\n\nexport default MoodChart;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,aAAa,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjDV,OAAO,CAACW,QAAQ,CACdV,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMX,aAAa,CAAC,CAAC;QAClCO,WAAW,CAACI,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,SAAS;QACNH,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,IAAI,GAAG;IACTG,MAAM,EAAER,QAAQ,CAACS,GAAG,CAACC,KAAK,IAAI,IAAIC,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IACxEC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,YAAY;MACnBV,IAAI,EAAEL,QAAQ,CAACS,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACM,SAAS,CAAC;MAE5CC,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE,oBAAoB;MACjCC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,oBACIxB,OAAA;IAAKyB,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjE7B,OAAA;MAAA6B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzB3B,OAAO,gBAAGN,OAAA;MAAA6B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGjC,OAAA,CAACZ,IAAI;MAACqB,IAAI,EAAEA;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAxCID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}